@model IEnumerable<Customer.Models.客戶聯絡人>
@using Customer.Models.Search;

@{
    客戶聯絡人SearchViewModel 客戶聯絡人Search = ViewBag.SearchViewModel;
    SoreViewModel SoreViewModel = ViewBag.SoreViewModel;
    IEnumerable<SelectListItem> 職稱 = this.ViewBag.Find職稱;
    ViewBag.Title = "客戶聯絡人";
}

<h2>客戶聯絡人</h2>
<p>
    <form id="Form1" action="@Url.Action("Index","客戶聯絡人")" class="form-inline" method="post">
        @Html.Hidden("Page", SoreViewModel.Page.ToString())
        @Html.Hidden("SortName", SoreViewModel.SortName)
        @Html.Hidden("SortOrder", SoreViewModel.SortOrder)
        @Html.Hidden("ResetType", "T")
        <div class="form-group mb-2">
            @Html.Label("姓名")
            @Html.TextBox("Find姓名", null, new { @class = "form -control search", placeholder = "請輸入姓名" })
            <input type="submit" value="搜尋" class="btn btn-primary mb-2" />
        </div>
        <br /> <br />
        <div class="form-group mb-2">
            @Html.DropDownList("Find職稱", 職稱, "請選擇職稱", htmlAttributes: new { @class = "form-control" })

            <input type="button" value="Create New" onclick="location.href='@Url.Action("Create", "客戶聯絡人" )'" class="btn btn-danger" />
            <input type="button" value="匯出" onclick="location.href='@Url.Action("Export", "客戶聯絡人" )'" class="btn btn-danger" />

            <br />
        </div>
    </form>
</p>
@using (Html.BeginForm("BatchUpdate", "客戶聯絡人",new { 客戶聯絡人Search , SoreViewModel }, FormMethod.Post))
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.職稱)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.姓名)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.手機)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.電話)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.客戶資料.客戶名稱)
            </th>
            <th></th>
        </tr>
        @{
            var data = Model.ToArray();
        }
        @for (var i = 0; i < data.Length; i++)
        {
            @Html.HiddenFor(modelItem => data[i].Id)
            <tr>
                <td>
                    @Html.EditorFor(modelItem => data[i].職稱)
                    @Html.ValidationMessageFor(model => data[i].職稱, "", new { @class = "text-danger" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].姓名)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].Email)
                </td>
                <td>
                    @Html.EditorFor(modelItem => data[i].手機)
                    @Html.ValidationMessageFor(model => data[i].手機, "", new { @class = "text-danger" })

                </td>
                <td>
                    @Html.EditorFor(modelItem => data[i].電話)
                    @Html.ValidationMessageFor(model => data[i].電話, "", new { @class = "text-danger" })

                </td>
                <td>
                    @Html.DisplayFor(modelItem => data[i].客戶資料.客戶名稱)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = data[i].Id }) |
                    @Html.ActionLink("Details", "Details", new { id = data[i].Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = data[i].Id })
                </td>
            </tr>
        }

    </table>

    <input type="submit" value="批次更新" class="btn btn-primary" />
}


@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, keyword = ViewBag.keywordVB, keyword2 = ViewBag.keyword2VB }))
@section scripts {
    <script src="~/Scripts/jquery.url.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $("#Form1").on("submit", function (event) {
                if ($("#ResetType").val() === "T") $("#Page").val("1");
                return true;
            });

            $(".pagination a").on("click", function (event) {
                event.preventDefault();
                $.url.init($(this).attr("href"))
                $("#Page").val($.url.param("page"));
                $("#ResetType").val("F");
                $("#Form1").submit();
            });


            $(".jsSubject").on("click", function (event) {
                event.preventDefault();
                $("#SortName").val($(this).data("subjectname"));
                $("#SortOrder").val(($("#SortOrder").val() == "DESC") ? "ASC" : "DESC");

                $("#ResetType").val("F");
                $("#Form1").submit();
            });

            $("#Form1 select").on("change", function () {
                $("#Form1").submit();
            });
        })
    </script>
}